#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define GAME 1
#define NUM 2
#define SYM 3
#define FUN 4
#define NAV 5
#define MSE 6
#define MED 7

&caps_word {
   continue-list = <LSHIFT UNDERSCORE MINUS BSPC>; 
};


/ {
  chosen {
    zmk,matrix_transform = &skeletyl_transform;
  };

 macros {

	lambda_arrow: lambda_arrow {
            label = "lambda_arrow";
            compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
            wait-ms = <10>;
	    tap-ms = <10>;
	    bindings
	    = <&kp MINUS &kp GREATER_THAN>
	    ;
        };
	
    };

    combos {
        compatible = "zmk,combos"; 

        combo_lPar {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LPAR>;
        };

        combo_lBrace {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_arrow {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&lambda_arrow>;
        };

        combo_rBrace {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RIGHT_BRACE>;
        };
	
        combo_rPar {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RPAR>;
        };

        combo_del {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };
	
	combo_esc {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp ESC>;
        };
	
	combo_equals {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp EQUAL>;
        };
	
 	combo_grave {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp GRAVE>;
        };
 
        combo_enter {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp RET>;
        };
 
        combo_ctrl_backspace {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp LC(BSPC)>;
        };

        combo_backspace {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
	
	combo_caps_word {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&caps_word>;
        };	

        combo_cut {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp K_CUT>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp K_COPY>;
        };
	
        combo_paste {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp K_PASTE>;
        };
	
        combo_slash {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp SLASH>;
        };
	
        combo_bleLayer {
            timeout-ms = <125>;
            key-positions = <30 31>;
            bindings = <&mo BLE_LAYER>;
        };
	
    };

   behaviors {        
		hm_shift: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <125>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		hm_gui: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping_term_ms = <175>;
			quick_tap_ms = <200>;
			global-quick-tap;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
		
		gqt: global-quick-tap {
		    compatible = "zmk,behavior-hold-tap";
		    label = "GLOBAL_QUICK_TAP";
		    #binding-cells = <2>;
		    flavor = "tap-preferred";
		    tapping-term-ms = <175>;
		    quick-tap-ms = <125>;
		    global-quick-tap;
		    retro-tap;
		    bindings = <&kp>, <&kp>;
		};
		
		morph_tab: morph_tab {
		    compatible = "zmk,behavior-mod-morph";
		    label = "MOD_MORPH";
		    #binding-cells = <0>;
		    bindings = <&lt NAV_LAYER SLASH>, <&kp TAB>;
		    mods = <(MOD_LGUI|MOD_LCTL|MOD_LALT)>;
		};


	};

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰──────── 30  31  32 │ │ 33  34  35 ────────╯
              ╰────────╯ ╰────────╯            
*/



  keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
	&kp Q    &kp F        &kp C       &kp K         &kp MINUS       &kp APOS  &kp B        &kp O      &kp U       &kp Z
	&hm LGUI R     &hm LCTRL S  &hm LALT T  &hm LSHIFT H  &kp D                &kp V        &hm LSHIFT N &hm LALT A &hm LCTRL I &hm LGUI L 
	&kp X          &kp Y      &kp G       &kp M         &kp SEMI                &kp W        &kp P        &kp DOT    &kp COMMA   &kp J
	           &morph_tab  &kp SPACE  &none                       &kp RET  &kp E &none
            >;
        };

    };
};
