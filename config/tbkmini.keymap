#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT 0
#define NUMBER 1
#define SYMBOL 2
#define ARROW 3
#define TMUX 4




/ {
  chosen {
    zmk,matrix_transform = &skeletyl_transform;
  };

  combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp TAB>;
        };
        
         combo_alt {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LALT>;
        };
        
    };

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰──────── 30  31  32 │ │ 33  34  35 ────────╯
              ╰────────╯ ╰────────╯            
*/


  keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
              &kp Q          &kp W        &kp E         &kp R        &kp T         &kp Y     &kp U     &kp I       &kp O     &kp P
              &kp A          &lt TMUX S   &kp D         &lt ARROW F  &kp G         &kp H     &kp J     &kp K       &kp L     &kp SEMI 
              &mt LSHIFT Z   &kp X        &kp C         &kp V        &kp B         &kp N     &kp M     &kp COMMA   &kp DOT   &mt LSHIFT SLASH
                                     &mt LCTRL ESC &lt LGUI SPACE &kp BSPC         &mt LALT  TAB       &lt NUMBER  BSPC      &lt SYMBOL ENTER
            >;
        };
        number_layer {
            bindings = <
              &trans    &kp N7       &kp N8       &kp N9       &trans                         &trans    &trans    &trans    &trans    &trans
              &trans    &kp N4       &kp N5       &kp N6       &trans                         &trans    &trans    &trans    &trans    &trans
              &trans    &kp N1       &kp N2       &kp N3       &trans                         &trans    &trans    &trans    &trans    &trans
                                     &kp N0       &trans       &trans                         &trans    &trans    &trans
            >;
        };
        symbol_layer {
          bindings = <
                    &kp EXCL &kp AT    &kp HASH &kp DOLLAR &kp PERCENT                        &kp CARET &kp AMPERSAND &kp ASTERISK  &kp PIPE &kp BACKSLASH
                    &kp TILDE    &kp GRAVE    &kp KP_PLUS    &kp UNDER    &trans              &kp LPAR    &kp LBKT    &kp LBRC    &kp SQT    &kp DQT  
                    &kp EQUAL    &kp KP_PLUS    &kp KP_MINUS    &trans    &trans              &kp RPAR    &kp RBKT    &kp RBRC    &kp UNDER    &kp KP_MINUS  
                                            &trans  &bt BT_CLR   &kp TILDE                    &kp UNDER    &kp KP_PLUS  &trans 
          >;
	    	};	
        arrow_layer {
            bindings = <

              &trans    &trans    &trans    &trans    &trans                         &bt BT_CLR    &trans    &trans    &trans    &trans
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT 
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &trans    &trans    &trans 
                                  &trans    &trans    &trans                         &trans    &trans    &trans  
            >;
        };
        tmux_layer {
            bindings = <
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(I)    &trans    &trans
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans
                                  &trans    &trans   &trans                         &trans    &trans    &trans  
            >;
        };

    };
};
